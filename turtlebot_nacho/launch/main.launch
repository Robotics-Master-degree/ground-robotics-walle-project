<?xml version="1.0" encoding="UTF-8" ?>

<launch>

  <arg name="base"      value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
  <arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 -->
  <arg name="gui" default="true"/>
  <arg name="stacks"    value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
  <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>
  <arg name="lidar" value="$(optenv TURTLEBOT_LIDAR rplidar)"/>  <!-- -->
  <arg name="use_sim_time" default="true" />
  <arg name="headless" default="false" />


  <!-- MAP CHOOSE -->
  <arg name="world_name" default="$(find turtlebot_nacho)/worlds/ground_robotics_final_project_scenario2.world"/>


  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="0" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
    <arg name="headless" value="$(arg headless)" />
    <arg name="world_name" value="$(arg world_name)" />
  </include>

<!-- ROBOT MODEL WITH LASER -->

  <include file="$(find turtlebot_walle)/launch/includes/simulated_kobuki_lidar.launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
    <arg name="lidar" value="$(arg lidar)"/>
  </include>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

<!-- SLAM -->

 <node pkg="gmapping" type="slam_gmapping" respawn="false" name="slam_gmapping" output="screen"/>

<!--MOVE BASE-->

 <include file="$(find turtlebot_nacho)/launch/includes/move_base.launch"/>
 <include file="$(find my_configure)/launch/explore.launch"/>

 <node pkg="vision" name="camera_rplidar" type="camera_rplidar.py" output="screen"/>
 <node pkg="cluster_detection"  name="main" type="main.py" output="screen"/>

 <node pkg="cerebro_walle" name="cerebro_walle_node" type="cerebro_walle_node" output="screen"/>

  <node name="rviz" type="rviz" pkg="rviz" />




</launch>
